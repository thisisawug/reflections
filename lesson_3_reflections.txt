When would you want to use a remote repository rather than keeping all your work
local?

    - I would use a remote repository when I share my work with others and
      collaborate with them.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    - Because on the remote repository, there might be changes that destroy
      the product on the local repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    - git fork:   copy a repository on Github
    - git clone:  copy a repository from GitHub to local, or local to local.
    - git branch: make another line to commit

    I use 'git fork' instead of 'git clone' when I want to copy a repository
    on GitHub.
    I use 'git clone' instead of 'git fork' when I bring the repository to
    my local machine.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It is benefitial in the case that there are different changes between
    the local repository and the remote. Having a copy of the remote enables
    merger both changes easily and safely like merging branches.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    - Easier:
          - shareing a monitor and editing a same file like Visual Studio
            Live Share.
    - Harder:
          - shareing files on the file server and modifying a file with taking
            care not to conflict with others.
          - using no tools and asking other collaboraters to merge what I
            change only in meeting.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
